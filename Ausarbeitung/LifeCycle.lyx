#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
% for more info about these settings, see
% https://ctan.org/tex-archive/macros/latex/contrib/koma-script/doc/scrguien.pdf
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

% fancy page header/footer settings
% for more information see section 9 of
% ftp://www.ctan.org/pub/tex-archive/macros/latex2e/contrib/fancyhdr/fancyhdr.pdf
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}

% increases link area for cross-references and autoname them
% if you change the document language to e.g. French
% you must change "extrasenglish" to "extrasfrench"
% if you uncomment the following lines, you cannot use the reference version Ref+Text in LyX
%\AtBeginDocument{%
% \renewcommand{\ref}[1]{\autoref{#1}}
%}
%\def\refnamechanges{%
% \renewcommand*{\equationautorefname}[1]{}
% \renewcommand{\sectionautorefname}{sec.\negthinspace}
% \renewcommand{\subsectionautorefname}{sec.\negthinspace}
% \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
% \renewcommand{\figureautorefname}{Fig.\negthinspace}
% \renewcommand{\tableautorefname}{Tab.\negthinspace}
%}
%\@ifpackageloaded{babel}{\addto\extrasenglish{\refnamechanges}}{\refnamechanges}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage
\use_default_options true
\master Thread Management.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language german
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 1
\branch Standalone
\selected 1
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\is_math_indent 1
\math_indentation default
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Lebenszyklus
\end_layout

\begin_layout Standard
Im Folgenden werden Möglichkeiten erläutert, zwischen den aus dem Abschnitt
 Eigenschaften 
\begin_inset CommandInset ref
LatexCommand eqref
reference "thread-statuses"
plural "false"
caps "false"
noprefix "false"

\end_inset

 bekannten Thread Status zu wechseln.
\end_layout

\begin_layout Section
Erzeugen und Ausführen
\end_layout

\begin_layout Standard
Java ermöglicht zwei Methoden, 
\lang english
Threads
\lang german
 zu erzeugen.
 Entweder kann die Klasse
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Thread
\end_layout

\end_inset

 direkt erweitert werden oder es wird ein 
\lang english
Thread
\lang german
\SpecialChar nobreakdash
Objekt von einer selbst erstellten Klasse erzeugt, die das 
\lang english
Interface
\lang german

\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Runnable
\end_layout

\end_inset

 implementiert.
 In beiden Fällen muss die Methode
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

run()
\end_layout

\end_inset

 definiert werden, die festlegt, was der jeweilige 
\lang english
Thread
\lang german
 nach dem Starten ausführen soll.
\end_layout

\begin_layout Standard
Das Implementieren von 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Runnable
\end_layout

\end_inset

 wird in den meisten Fällen dem Erweitern der Klasse
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Thread
\end_layout

\end_inset

 vorgezogen.
 Denn oft können eigene Klassen, die um die Fähigkeit erweitert werden sollen,
 per 
\lang english
Thread
\lang german
 ausgeführt zu werden, nicht Unterklasse von 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Thread
\end_layout

\end_inset

 sein.
\end_layout

\begin_layout Standard
Soll zusätzliche Kontrolle über den Erzeugungsprozess von 
\lang english
Threads
\lang german
 erlangt werden, können diese nach dem 
\lang english
Factory Pattern
\lang german

\begin_inset Foot
status open

\begin_layout Plain Layout
Zusätzliche Infos dazu in: Joshua Bloch.
 Effective Java.
 Addison Wesley, 1.
 Jan.
 2018.
 ISBN: 0134685997.
\end_layout

\end_inset

 erzeugt werden.
 Dafür muss in einer eigenen Klasse das 
\lang english
Interface
\lang german

\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

ThreadFactory
\end_layout

\end_inset

 implementiert und die Methode
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

newThread()
\end_layout

\end_inset

 überschrieben werden.
\end_layout

\begin_layout Section
Pausieren
\begin_inset CommandInset label
LatexCommand label
name "sec:Pause"

\end_inset


\end_layout

\begin_layout Standard
Einen 
\lang english
Thread
\lang german
 zu pausieren ist dann sinnvoll, wenn ein 
\lang english
Thread
\lang german
 warten und währenddessen keine Prozessorressourcen verschwenden soll.
 Letzteres wäre beispielsweise beim aktiven Warten
\begin_inset Foot
status open

\begin_layout Plain Layout
Warten durch Ausführen von Anweisungen, siehe 
\begin_inset CommandInset href
LatexCommand href
target "https://de.wikipedia.org/wiki/Aktives_Warten"

\end_inset

.
\end_layout

\end_inset

 der Fall.
\end_layout

\begin_layout Standard
Zum Pausieren existiert in Java die Funktion 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Thread.sleep()
\end_layout

\end_inset

, die als ersten Parameter die zu wartenden Millisekunden entgegennimmt.
 Optional können als zweiter Parameter zusätzlich zu wartende Nanosekunden
 angegeben werden.
\end_layout

\begin_layout Standard
Soll für längere Zeit gewartet werden, kann die Enumeration
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

TimeUnit
\end_layout

\end_inset

 zu Hilfe genommen werden.
 Diese erlaubt es direkt, 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

sleep()
\end_layout

\end_inset

 für eine Zeitspanne von Nanosekunden bis Tagen aufzurufen.
\end_layout

\begin_layout Standard
Wird ein 
\lang english
Thread
\lang german
 während des Pausierens unterbrochen 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Interrupt"
plural "false"
caps "false"
noprefix "false"

\end_inset

, wird sofort eine
\begin_inset Newline newline
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

InterruptedException
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "chap:ExceptionHandling"
plural "false"
caps "false"
noprefix "false"

\end_inset

 ausgelöst.
\end_layout

\begin_layout Section
Auf einen anderen 
\lang english
Thread
\lang german
 warten
\end_layout

\begin_layout Standard
Oft muss ein 
\lang english
Thread
\lang german
 auf die Beendigung eines anderen 
\lang english
Threads
\lang german
 warten.
 Beispielsweise, wenn eine Abhängigkeit in der Ausführungsreihenfolge von
 zwei 
\lang english
Threads
\lang german
 besteht.
 Java stellt dafür die Methode 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

join()
\end_layout

\end_inset

 für 
\lang english
Thread
\lang german
\SpecialChar nobreakdash
Objekte bereit.
 Wird diese Methode für ein 
\lang english
Thread
\lang german
\SpecialChar nobreakdash
Objekt aufgerufen, wird die Ausführung des aufrufenden 
\lang english
Threads
\lang german
 bis zur Beendigung des referenzierten 
\lang english
Threads
\lang german
 ausgesetzt.
 So könnte etwa der immer existierende Haupt
\lang english
\SpecialChar nobreakdash
Thread
\lang german
 eines Programms 
\lang english
performance
\lang german
kritische Verarbeitungen im 
\lang english
Multithreading
\lang german
\SpecialChar nobreakdash
Modus durchführen lassen und, nachdem 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

join()
\end_layout

\end_inset

 für all diese 
\lang english
Threads
\lang german
 beendet wurde, im 
\lang english
Singlethread
\lang german
\SpecialChar nobreakdash
Modus weiterarbeiten.
\end_layout

\begin_layout Section
Unterbrechen
\begin_inset CommandInset label
LatexCommand label
name "sec:Interrupt"

\end_inset


\end_layout

\begin_layout Standard
In Java kann für einen 
\lang english
Thread
\lang german
 über die Methode
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

interrupt()
\end_layout

\end_inset

 angegeben werden, dass er unterbrochen werden soll.
 
\lang english
Threads
\lang german
 können diese Angabe überprüfen und respektieren, müssen es aber nicht.
\end_layout

\begin_layout Standard
Zum Überprüfen, ob ein 
\lang english
Thread
\lang german
 unterbrochen werden soll, existieren zwei ähnlich benannte Methoden: 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

interrupted()
\end_layout

\end_inset

 und 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

isInterrupted()
\end_layout

\end_inset

.
 Auch geben beide Methoden einen 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

boolean
\end_layout

\end_inset

 zurück und können wegen diesen Ähnlichkeiten Verwirrung stiften
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://stackoverflow.com/q/16916238/4682621"

\end_inset


\end_layout

\end_inset

.
 Sie unterscheiden sich in zwei Eigenschaften: zum einen ist 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

interrupted()
\end_layout

\end_inset

 eine statische Methode, 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

isInterrupted()
\end_layout

\end_inset

 nicht.
 Zum anderen setzt 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

interrupted()
\end_layout

\end_inset

 den Unterbrechungsindikator auf 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

false
\end_layout

\end_inset

 zurück.
 Zur Überprüfung bei einem 
\lang english
Thread
\lang german
\SpecialChar nobreakdash
Objekt empfiehlt sich also die Verwendung von 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

isInterrupted()
\end_layout

\end_inset

.
 Zur Überprüfung innerhalb desselben 
\lang english
Threads
\lang german
 kann 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

interrupted()
\end_layout

\end_inset

 verwendet werden.
 Auch im Hinblick auf Ausnahmebehandlung 
\begin_inset CommandInset ref
LatexCommand eqref
reference "chap:ExceptionHandling"
plural "false"
caps "false"
noprefix "false"

\end_inset

 ist es wichtig, diese Unterschiede der beiden Methoden zu kennen.
\end_layout

\begin_layout Standard
Threads und verbundene Klassen sind elementare Bestandteile von Java und
 existieren seit Java Version 1.
 Die einzige nennenswerte Änderung an der Klasse
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

Thread
\end_layout

\end_inset

 selbst ist das Entfernen der Methoden
\begin_inset space ~
\end_inset


\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

destroy()
\end_layout

\end_inset

 und 
\begin_inset listings
lstparams "language=Java"
inline true
status open

\begin_layout Plain Layout

stop()
\end_layout

\end_inset

 in Java 11
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8204243"

\end_inset


\end_layout

\end_inset

.
 Die Methoden waren schon lange als 
\shape italic
\lang english
deprecated
\shape default
\lang german
 markiert und unfunktional oder gar nicht erst implementiert.
 Grund dafür war, dass die Verwendung dieser Methoden zu Deadlocks oder
 undefiniertem Verhalten führen konnte
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://docs.oracle.com/javase/9/docs/api/java/lang/Thread.html"

\end_inset

, siehe genannte Methoden.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Branch Standalone
inverted 0
status collapsed

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The contents of this branch is only output if this chapter is processed
 on its own, i.
\begin_inset space \thinspace{}
\end_inset

e., not from the master.
 This allows you to have a bibliography and a nomenclature if you only want
 to output this chapter.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "Bibliography.lyx"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
